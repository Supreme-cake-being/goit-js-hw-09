{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBAChCG,EAAcJ,SAASC,cAAc,SA8B3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC5BA,EAAM,G,CArCbO,EAAAjB,GAASkB,OAAOC,KAAK,CACnBC,QAAS,CACPC,kBAAmB,SAGrBC,QAAS,CACPD,kBAAmB,WAIvBd,EAAYgB,iBAAiB,UAAWC,IACtCA,EAAEC,iBAEF,IAAIC,EAAQ,EAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAIC,SAAStB,EAAOuB,OAAQF,GAAK,EAC/CD,EAAQE,SAAS1B,EAAW2B,OAASF,EAAIC,SAASvB,EAAUwB,OAE5DrB,EAAcmB,EAAI,EAAGD,GAClBI,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBO,EAAAjB,GAASkB,OAAOE,QAAQ,qBAAqBX,QAAeC,MAAU,IAEvEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBO,EAAAjB,GAASkB,OAAOI,QAAQ,oBAAoBb,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// notiflix\nimport Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst firstDelay = document.querySelector(\"input[name='delay']\");\nconst delayStep = document.querySelector(\"input[name='step']\");\nconst amount = document.querySelector(\"input[name='amount']\");\nconst promiseForm = document.querySelector(\".form\");\n\nNotiflix.Notify.init({  \n  success: {\n    notiflixIconColor: 'white',\n  },\n\n  failure: {\n    notiflixIconColor: 'white',\n  }\n});\n\npromiseForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n\n  let delay = 0;\n  \n  for (let i = 0; i < parseInt(amount.value); i += 1) {\n    delay = parseInt(firstDelay.value) + i * parseInt(delayStep.value);\n\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve)\n        resolve({ position, delay });\n      else\n        reject({ position, delay });\n    }, delay);\n  });\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$promiseForm","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","init","success","notiflixIconColor","failure","addEventListener","e","preventDefault","delay1","i","parseInt","value","then","catch"],"version":3,"file":"03-promises.5ccfb5e1.js.map"}